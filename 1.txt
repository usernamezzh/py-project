python3简介
1.python是一种解释型语言：意味着开发过程中没有编译这个环节。
2.python是交互式语言：意味着你可以在一个python提示符>>>后直接执行代码。
3.python是面向对象语言：意味着python支持面向对象的风格或代码封装在对象的编程技术。
4.python是初学者的语言：python对初级编程者而言，是一种伟大的语言，支持广泛的应用程序开发，从简单的文字处理到www浏览器再到游戏。

python特点
1.易于学习：python有相对较少的关键字，结构简单，和一个明确定义的语法，学习起来更加简单。
2.易于阅读：python代码定义的更清晰。
3.易于维护：python的成功在于它的源代码相当容易维护。
4.一个广泛的标准库：python最大的优势之一是丰富的库，跨平台的，在unix,windows和Mac兼容很好。
5.互动模式：互动模式的支持，可以从终端输入执行代码并获得结果，互动测试和调试代码片段。
6.可移植：基于其开放源代码的特性，python已经被移植到许多平台。
7.可扩展：如果你需要一段运行很快的关键代码，或者是想要编写一些不愿开放的算法，你可以使用C或C++完成那部分程序，然后从你的python程序中调用。
8.数据库：python提供所有主要商业数据库的接口。
9.GUI编程：python支持GUI可以创建和移植到许多系统调用。
10.可嵌入：你可以将python嵌入到C/C++程序，让你的程序的用户获得“校本化”的能力。

python3基础语法
1.标识符（1.第一个字母必须是字母表中的字母或下划线_。 2.标识符的其它部分由字母、数字和下划线组成。 3.标识符对大小写敏感） _CabinetName
2.python关键字（'False', 'None','True','and','as','assert','break','class','continue','def','del','elif','else','except','finally','for',
'from','global','if','import','in','is','lambda','nonlocal','not','or','pass','raise','return','try','while','with','yield'）
3.注释（1.单行注释用"#"。 2.多行注释可以用多个#号，还有'''和"""）
#第一个注释
#第二个注释
'''
第三个注释
第四个注释
'''
"""
第五个注释
第六个注释
"""
4.行与缩进（python最具特色的就是使用缩进来标识代码块，不需要使用大括号{}。缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数。）
5.多行语句（python通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠（\）来实现多行语句。在[],{},()中的多行语句，不需要使用反斜杠。）
total = item_one + \
        item_two + \
        item_three
total = ['item_one', 'item_two', 'item_three', 'item_four', 'item_five']
6.数字（Number）类型
a.python中数字有四种类型：整数、布尔型、浮点数和复数。
(1)int(整数)，如1，只有一种整数类型int,表示为长整型，没有python2中的Long。
(2)bool(布尔)，如True。
(3)float（浮点数),如1.23, 3E-2。
(4)complex(复数)，如1 + 2j、 1.1 + 2.2j
7.字符串（String）类型
a.python中单引号和双引号使用完全相同。
b.使用三引号（'''或"""）可以指定一个多行字符串。
c.转义符'\',反斜杠可以用来转义，使用r可以让反斜杠不发生转义。如r"this is a line with \n" 则\n会显示，并不是换行。
d.按字面意义级联字符串，如“this” “is” “string”会被自动转换为this is string。
e.字符串可以用+运算符连接在一起，用*运算符重复。
f.python中的字符串有两种索引方式，从左往右以0开始，从右往左以-1开始。
g.python中的字符串不能改变。
h.python没有单独的字符类型，一个字符就是长度为1的字符串。
i.字符串的截取语法格式如下：变量[头下标：尾下标：步长]
8.空行（函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。类和函数入口之间也用一行空行分隔，以突出函数入口的开始。
空行与代码缩进不同，空行并不是python语法的一部分。书写时不插入空行，python解释器运行也不会出错。但是空行的作用在于分隔两
段不同功能或含义的代码，便于日后代码的维护和重构。空行也是程序代码的一部分。）
9.同一行显示多条语句（python可以在同一行中使用多条语句，语句之间使用分号（；）分割。）
10.多个语句构成代码组（缩进相同的一组语句构成一个代码块，我们称之为代码组。像if、while、def和class这样的复合语句，首行以关键字开始，以冒号（：）
结束，该行之后的一行或多行代码构成代码组。我们将首行及后面的代码组称之为一个子句（clause））。
11.print默认输出是换行的，如果要实现不换行需要在变量末尾加上end="":
12.import与from...import
在python用import或者from...import来导入相应的模块。
将整个模块（somemodule）导入，格式为：from somemodule
从某个模块中导入某个函数，格式为：from somemodule import somefunction
从某个模块中导入多个函数，格式为：from somemodule import firstfunc, secondfunc, thirdfunc
将某个模块中的全部函数导入，格式为：from somemodule import *

python3基本数据类型
1.python中的变量不需要声明。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。
2.在python中，变量就是变量，它没有类型，我们所说的‘类型’是变量所指的内存中对象的类型。
3.等号（=）用来给变量赋值，等号运算符左边是一个变量名，等号（=）运算符右边是存储在变量中的值。
4.多个变量赋值（python允许同时为多个变量赋值。例如：a = b = c = 1,以上实例，创建一个整形对象，值为1，从后向前赋值，三个变量被赋予相同的数值。
a , b, c = 1, 2, "runoob", 两个整型对象1和2分配给变量a和b,字符串对象“runoob”分配给变量c）。
5.标准数据类型（Number(数字)、String（字符串）、List（列表）、 Tuple(元组)、Set（集合）、 Dictionary(字典)）。
    python的六个标准数据类型中，有三个可变数据和三个不可变数据。
    可变数据：List（列表）、Dictionary(字典)、 Set（集合）
    不可变数据：Number（数字）、String（字符串）、Tuple(元组)；
a.python3支持int、float、bool、complex。在python3里，只有一种整型类型int,表示为长整型，没有python2中的Long。内置的type（）函数可以用来查询变量所指的对象类型。
  此外还可以用isinstance来判断。isinstance与type的区别在于：type()不会认为子类是一种父类类型，isinstance()会认为子类是一种父类类型。
  2进制、8进制、10进制、16进制在python中的表示方法和互相转换函数
  2进制：满2进1,0b10    8进制：满8进1,0o10    10进制：满10进1,10     16进制：满16进1,0x10    时间满60进1
  bin() 转2进制的方法   int() 转10进制的方法   oct() 转8进制的方法    hex() 转16进制的方法
  注意：1.python可以同时为多个变量赋值，如a,b = 1,2。
        2.一个变量可以通过赋值指向不同类型的对象。
        3.数值的除法包含两个运算符：/返回一个浮点数，//返回一个一个整数。
        4.在混合计算时，python会把整型转换成为浮点型。
        5.python支持复数，复数由实数部分和虚数部分构成，可以用a + bj或者complex(a,b)表示，复数的实部a和虚部b都是浮点型。
b.python中的字符串用单引号'或双引号''括起来，同时使用反斜杠\转义特殊字符。
  字符串的截取语法格式如下：变量[头下标:尾下标] 索引值以0为开始值，-1为从末尾的开始位置。
  从后面索引：          -6    -5    -4    -3    -2    -1
  从前面索引：           0     1     2     3     4     5
                     +------+-----+-----+-----+-----+-----+
                     |   a  |  b  |  c  |  d  |  e  |  f  |
                     +------+-----+-----+-----+-----+-----+
  从前面截取：        ：     1     2     3     4     5     ：
  从后面截取：        ：    -5    -4    -3    -2    -1     ：
  加号+是字符串的连接符，星号*表示复制当前字符串，与之结合的数字为复数的次数。
  python的反斜杠\转义特殊字符，如果不想让反斜杠发生转义，可以在字符串前面添加一个r,表示原始字符串：
  另外，反斜杠可以作为续行符，表示下一行是上一行的延续。也可以使用"""..."""或者'''...'''跨越多行。
  注意：python没有单独的字符类型，一个字符就是长度为1的字符串。与C语言字符串不同的是，python字符串不能被改变，向一个索引位置赋值，比如str[0] = 'm'会导致错误。
  1.反斜杠可以用来转义，使用r可以让反斜杠不发生转义。
  2.字符串可以用+运算符连接在一起，用*运算符重复。
  3.python中的字符串有两种索引方式，从左往右以0开始，从右往左以-1开始。
  4.python中的字符串不能被改变。
c.list(列表)是python中使用最频繁的数据类型。
  列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。
  列表是写在方括号[]之间，用逗号分隔开的元素列表。
  和字符串一样，列表同样可以被索引和截取，列表被截取后返回一个包含所需元素的新列表。
  列表截取的语法格式如下：变量[头下标：尾下标]，索引值以0为开始值，-1为末尾的开始位置。
  从后面索引：          -6    -5    -4    -3    -2    -1
  从前面索引：           0     1     2     3     4     5
                 t = [ 'a',  'b',  'c',  'd',  'e',  'f']
                      --|-----|-----|-----|-----|-----|---
         t = [1:3]            [-----------)                        ['b','c']
         t = [:4]       [-----------------------)                  ['a','b','c','d']
         t = [3:]                         [-----------]            ['d','e','f']
         t = [:]        [-----------------------------]            ['a','b','c','d','e','f']
   加号+是列表连接运算符，星号*是重复操作。
   与python字符串不一样的是，列表中的元素是可以改变的。
   python列表截取可以接收第三个参数，参数作用是截取的步长。如果第三个参数为负数表示逆向读取。
   注意：
   1.List写在方括号之间，元素用逗号隔开。
   2.和字符串一样，list可以被索引和切片。
   3.List可以使用+操作符进行拼接。
   4.List中的元素是可以改变的。
d.元组（tuple）与列表类似，不同之处在于元组的元素不能修改。元组写在小括号（）里，元素之间用逗号隔开，元组中的元素类型也可以不相同。
  元组与字符串类似，可以被索引且下标索引从0开始，-1为从末尾开始的位置，也可以进行截取。其实可以把字符串看作一种特殊的元组。
  虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表。
  构造包含0个或1个元素的元组比较特殊，所以有一些额外的语法规则：tup1 = ()  空元组，  tup2 = (20,)  一个元素需要在后面加逗号。
  string、list、tuple都属于sequence(序列)。
  注意：
  1.与字符串一样，元组的元素不能修改。
  2.元组也可以被索引和切片，方法一样。
  3.注意构造包含0或者1个元素的元组的特殊语法规则。
  4.元组也可以使用+操作符进行拼接。
e.集合（set）是由一个或数个形态各异的大小整体组成的，构成集合的事物或对象称作元素或是成员。
  基本功能是进行成员关系测试和删除重复元素。
  可以使用大括号{}或者set()函数创建集合。注意：创建一个空集合必须用set()而不是{}，因为{}是用来创建一个空字典。
  创建格式parame = {value01,value02,...}或者set(value)

